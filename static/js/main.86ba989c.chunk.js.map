{"version":3,"sources":["store/searchSlice.js","components/searchForm.jsx","components/header.jsx","services/giphy.js","app.jsx","store/store.js","index.js"],"names":["searchSlice","createSlice","name","initialState","data","q","rating","limit","reducers","modifySearch","state","action","payload","actions","selectSearch","search","SearchForm","useState","setQ","setRating","setLimit","dispatch","useDispatch","createChangeHandler","setHook","evt","target","value","limitChangeHandler","parseInt","className","onSubmit","e","preventDefault","type","placeholder","onChange","id","checked","htmlFor","Header","giphyApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getGiphySearchResults","query","searchParams","queryString","encode","api_key","useGetGiphySearchResultsQuery","App","searchData","useSelector","isLoading","map","record","alt","src","images","fixed_height","url","original","store","configureStore","reducer","searchReducer","middleware","getDefaultMiddleware","concat","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86ba989c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    data: {\n        q: \"\",\n        rating: \"all\",\n        limit: \"20\"\n    }\n};\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    modifySearch: (state, action) => {\n      state.data = action.payload;\n    },\n  }\n});\n\nexport const { modifySearch } = searchSlice.actions;\n\nexport const selectSearch = (state) => state.search.data;\n\nexport default searchSlice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { modifySearch } from '../store/searchSlice';\n\n\nfunction SearchForm() {\n\n    const [q, setQ] = useState('');\n    const [rating, setRating] = useState('all');\n    const [limit, setLimit] = useState(20);\n    const dispatch = useDispatch();\n    \n   \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(modifySearch({\n            q,\n            rating,\n            limit\n        }))\n    }\n\n    // Standard function that work for all state changes that correspond to an input's name.\n    const createChangeHandler = (setHook) => (evt) => {\n        setHook(evt.target.value)\n    }\n\n    // Standard function that work for all state changes that correspond to an input's name.\n    const limitChangeHandler = (evt) => {\n        setLimit(parseInt(evt.target.value))\n    }\n\n    return (\n        <div className=\"form-container mb-3\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    {/* Binding state to value */}\n                    <input className=\"form-control\" type=\"text\" name=\"q\" placeholder=\"Search for gif...\" value={q} onChange={createChangeHandler(setQ)}/>\n                </div>\n                <div className=\"form-group d-flex justify-content-around\">\n                    <div>Limit Amount</div>\n                    <div className=\"form-check\">\n                        {/* Binded state to these values as well and added onChange for each radio button */}\n                        <input className=\"form-check-input\" type=\"radio\" id=\"five\" name=\"limit\" value=\"5\" checked={5===limit} onChange={limitChangeHandler} />\n                        <label className=\"fo d-flex justify-content-around rm-check-label\" htmlFor=\"five\">5</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"twenty\" name=\"limit\" value=\"20\" checked={20===limit} onChange={limitChangeHandler} />\n                        <label className=\"fo d-flex justify-content-around rm-check-label\" htmlFor=\"twenty\">20</label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"radio\" id=\"fifty\" name=\"limit\" value=\"50\" checked={50===limit} onChange={limitChangeHandler} />\n                        <label className=\"form-check-label\" htmlFor=\"fifty\">50</label>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"rating\">Rating</label>\n                    {/* The value here set the value of the whole control and can change the selected item */}\n                    <select className=\"form-control\" name=\"rating\" value={rating} onChange={createChangeHandler(setRating)}>\n                        {/* These values only apply when this option is selected */}\n                        <option value=\"all\">All</option>\n                        <option value=\"g\">G</option>\n                        <option value=\"pg\">PG</option>\n                        <option value=\"pg-13\">PG-13</option>\n                        <option value=\"r\">R</option>\n                    </select>\n                </div>\n                <button className=\"btn btn-dark\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;\n","import React from 'react';\n\nexport default function Header() {\n\n    return (\n        <div className=\"header\">\n            <h1 className=\"text-center\">Gif'R Us</h1>\n            <hr/>\n        </div>\n    )\n}","// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nimport queryString from 'querystring';\n\nconst apiKey = \"6ZD5zTmnq9nQBS3TskWh1NxakbG5Li6H\";\n\n// Define a service using a base URL and expected endpoints\nexport const giphyApi = createApi({\n  reducerPath: 'giphyApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://api.giphy.com/v1/' }),\n  endpoints: (builder) => ({\n    getGiphySearchResults: builder.query({\n      query: (searchParams) => {\n        const baseEndpoint = `gifs/search?`;\n        const query = queryString.encode({\n            ...searchParams,\n            api_key: apiKey\n        });\n        return baseEndpoint + query;\n      },\n    }),\n  }),\n})\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetGiphySearchResultsQuery } = giphyApi;\n","import { useSelector } from 'react-redux'\n\nimport SearchForm from './components/searchForm'\nimport Header from './components/header'\nimport { selectSearch } from './store/searchSlice'\n\nimport { useGetGiphySearchResultsQuery } from './services/giphy'\n\nimport './app.css';\n\nfunction App() {\n\n  // Using a query hook automatically fetches data and returns query values\n  const searchData = useSelector(selectSearch)\n  const { data, isLoading } = useGetGiphySearchResultsQuery(searchData)\n\n  return (\n    <div className=\"container\">\n      <Header />\n        <SearchForm />\n        <div className=\"gif-container\">\n          <div className=\"gif-card-fluid d-flex flex-wrap justify-content-around align-items-around\">\n            {isLoading ? <h2>Loading..</h2> : data?.data.map((record, id) => <img key={record.images.original.url+\"-\"+ id} alt=\"\" src={record.images.fixed_height.url}/>)}\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { giphyApi } from '../services/giphy'\nimport searchReducer from './searchSlice'\n\nexport const store = configureStore({\n  reducer: {\n    search: searchReducer,\n    // Add the generated reducer as a specific top-level slice\n    [giphyApi.reducerPath]: giphyApi.reducer,\n  },\n  // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(giphyApi.middleware),\n})\n\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\nsetupListeners(store.dispatch)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}